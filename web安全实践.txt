确定目标：
（1）ping，通过域名获取IP地址
ping www.sspu.edu.cn
www.sspu.edu.cn [180.169.93.148]  TTL=56
TTL（Time To Live，生存时间）
默认操作系统的TTL：
1、WINDOWS NT/2000/XP    TTL：128
2、WINDOWS 95/98              TTL：32
3、UNIX /BSD                        TTL：255
4、LINUX                               TTL：64（接近64）
5、WIN7                                TTL：64
确定到达目的地所经过的路由器：
win：tracert ip-address
Linux：traceroute ip-address
路径跳数=默认TTL-返回TTL
（2）DNS查询（查询IP地址）
http://tool.chinaz.com/
域名/IP                         获取的IP地址     数字地址          IP的物理位置
www.sspu.edu.cn         180.169.93.148  3030998420    上海市 电信
（3）端口扫描，看是否开通web服务
1.netcat
nc -n 180.169.93.148 80
2.nmap 
nmap -sS 180.169.93.148 80
PORT    STATE    SERVICE
80/tcp   open      http
获取目标web服务器信息
（1）banner获取
1.firefox插件：Live HTTP Headers
Server: Apache/2.2.23 (Unix) mod_jk/1.2.15
2.curl
curl -I www.sspu.edu.cn
Server: Apache/2.2.23 (Unix) mod_jk/1.2.15
（2）HTTP指纹
1.不常见的http请求方法
请求越不常见，出现不同响应的可能性越大。
2.错误信息
错误信息最容易暴露服务器的本来面目
工具：httprint
httprint -h www.sspu.edu.cn -s "D:\CTF tools\web安全实践工具\httprint_win32_301\httprint_301\win32\signatures.txt"
Banner Reported: Apache/2.2.23 (Unix) mod_jk/1.2.15
Banner Deduced: Apache/2.0.x
（3）中间件架构分析（负载均衡器，虚拟服务器配置，代理，防火墙）
一：负载均衡器：
1.对于采用dns轮询方式的负载平衡我们很容易看到它的相关主机：
nslookup sspu.edu.cn
非权威应答:
名称:    sspu.edu.cn
Address:  180.169.93.148
2.时间戳分析。在一秒内连续发送多个请求，看返回的头部的时间戳是否相同，如果有的主机时间未同步，那么你很幸运的发现的了它的负载均衡。
3.Etag与Last-Modified。我们多次请求后观察两个值，如果不同则非常有可能存在负载均衡
4.查看html源代码中的注释。相同的页面如果注释不同，很可能来自不同的主机
二：检测代理：
（1）trace请求：该方法会使服务器原样返回任意客户端请求的任何内容。（由于一些服务器在处理trace请求存在跨站漏洞，很多网站是不支持trace请求的）
向web服务器发送请求，服务器会回显收到的请求，正常情况下：返回的是我们的请求，存在代理服务器：那么返回的是代理服务器的请求
如果访问是代理：
1.代理服务器添加了固定的头：
"via:"X-Forwarded-For:","proxy-Connection:"
2.改变host头
（2）Connect标准测试
一般情况下HTTP代理服务都会支持HTTP CONNECT的方法，利用他能建立一个TCP连接来绕过一般的应用层功能。一般，HTTP CONNECT方法都用来通过HTTP代理来建立HTTPS连接。
三：检测防火墙
（1）连续的具有入侵特征的连接
对于服务器的入侵扫描一般都会遭到防火墙的拒绝，几乎所有的正规网站都会有防火墙的。我们面临的难题应该是对方使用的是什么类型的防火墙而不是用没用防火墙的问题。
（2）防火墙类型判断
判断的思想应该是向服务器发送各种类型的非法请求，并判断出是否是防火墙作出的回应，回应的特征是什么。
观察的方面：
（1）响应信息
Teros Web 应用防火墙技术会对trace请求作出500响应，提示：Invalid method code。F5 
TrafficShield 会返回400错误，并提示：The Server could not anderstand your request。Your error ID is：
Netcontinuum对任何非法请求都返回404错误。
SecureIIs会返回406错误。
（2）特殊的cookie
Teros 对每次响应都要使用同一个名――st8id。
TrafficShield 会使用cookie名为ASINFO。
四：web服务器写权限探测
采用如下方法：telnet到服务器的web端口(80)并发送一个如下请求： 
PUT /dir/1.txt HTTP/1.1 
telnet www.sspu.edu.cn 80
如果返回的是一个403错误，那么写权限就是没有开起来，如果需要你认证，并且返回一个 401(权限禁止) 的响应的话，说明是开了写权限，但是匿名用户不允许。如果一个目录同时开了"写"和"脚本和可执行程序"的话，那么web用户就可以上传一个程序并且执行它。

HTTP协议（HTTP编程）
HttpWebRequest类:
不要使用 HttpWebRequest 构造函数。使用 WebRequest.Create 方法初始化 HttpWebRequest 的一个新实例。如果 URI 的方案是 http:// 或 https://，则 Create 将返回 HttpWebRequest 实例。
HttpWebResponse类:
此类包含对 WebResponse 类中的属性和方法的 HTTP 特定用法的支持。HttpWebResponse 类用于生成发送 HTTP 请求和接收 HTTP 响应的 HTTP 独立客户端应用程序。
Uri类:
URI 是 Internet 上可由应用程序使用的资源的简洁表示形式。Uri 类定义了属性和方法来处理 URI，包括分析、比较和组合。Uri 类属性是只读的，修改 Uri 实例需使用 UriBuilder 类。
URI 由转义编码存储为规范化 URI，所有 ASCII 值大于 127 的字符都被替换为它们的等效十六进制数。为使 URI 具有规范化格式，Uri 构造函数执行以下步骤。
将 URI 方案转换为小写。
将主机名转换为小写。
移除默认端口号和空端口号。
移除多余的段（如"/"和"/test"段）以简化 URI。
使用 ToString 方法，可以将 Uri 类的内容从转义编码的 URI 引用转换为可读的 URI 引用。

web应用剖析
（1）层次结构的探测方法
从网站的根目录开始，顺着各个链接一路爬行。
对于隐藏的目录或界面我们只能猜测或者根据其他信息比如错误信息进行推理。
对于知名系统，搜索引擎总是会给我们意外的惊喜。
（2）自动化工具
1.wget：
wget命令用来从指定的URL下载文件
-r参数指示程序跟踪每一个链接。这将创建一个跟踪网站的完整目录
-P指定下载目录
-c 指定断点续传功能
-nc 不下载已经存在的文件
-p 下载页面显示所需的所有文件
-i,--input-file=FILE 从文件中取得URL
-d,--debug显示输出信息；
-q,--quiet 不显示输出信息；
2.Teleport Pro
3.Black Widow
4.Offline Explorer Pro

web应用剖析之信息提炼:
1.动态页面和静态生成页面
静态页面是不能用来测试工具和提交任何请求的，我们要关注它的注释或者其他信息，也许会有意外的发现。
动态页面是和服务器交互的页面，也是我们入侵服务器的通道。把所有页面划分成这两类很简单，只需根据扩展名来区分就可以了。
2.目录结构和目录名，文件名
网站架构是非常有规律的，我们可以通过目录结构和目录名大概推测出各个目录与文件的功能。
特权目录如 /admin/ /adm/等
备份或日志文件目录 如/back/ /log/ 等
文件包含目录如/inc/ /include/ /js/ /global/ /local/等
国际化目录如/en/ /eng/等。
3.文件扩展名
细分文件扩展名的目的是进一步分析没种扩展名的背后的技术使用，执行细节，通过搜索引擎可以获得最近的关于该文件的漏洞及攻击方法。
4. 表单
表单是web应用程序的骨干。我们要尽最大的可能找出所有页面的表单信息，特别是隐藏表单。我们可以利用自动化工具的搜索功能或者手工的方式找寻表单信息。
表单的提交方法。是get还是post。Get更容易在浏览器里操作，但这不以为着post就一定比get安全。
行为。表单调用了什么脚本，使用的语言等等。
最大长度。输入字段是否做了长度限制。如果做了长度限制你是否考虑绕过长度限制的方法。
隐藏。对于隐藏字段我们要特别注意它们的用途。
5. 查询字符串和参数
参数的含义是什么：
接收参数的页面或者程序是什么。
对参数的处理及验证是否严格。
是否包含数据库等敏感信息。
6. 常见cookie
很多应用程序是用cookie来传递信息和标识状态的
7.google hack
（1）intext:
这个就是把网页中的正文内容中的某个字符做为搜索条件.
intext:kali
（2）intitle:
搜索网页标题中是否有我们所要找的字符
（3）cache:
搜索google里关于某些内容的缓存,
（4）define:
搜索某个词语的定义
define:hacker
（5）filetype:
搜索指定类型的文件
filetype:.mdb
（6）info:
查找指定站点的一些基本信息
（7）inurl:
搜索我们指定的字符是否存在于URL中
inurl:admin 
（8）link:
返回所有网站做了链接的URL
link:www.sspu.edu.cn
（9）site:
返回与网站相关的URL
site:www.sspu.edu.cn
（10）related：
返回与网站相关的页面
（11）技巧
+ 把google可能忽略的字列如查询范围
- 把某个字忽略
~ 同意词
. 单一的通配符
* 通配符，可代表多个字母
""精确查询

常用的web服务器
（1）Apache
自由软件，Apache的特点是简单、速度快、性能稳定，并可做代理服务器来使用。
（2）IIS
Internet Information Server（Internet信息服务）
（3）GFE
Google的web服务器
（4）nginx
不仅是一个小巧且高效的HTTP服务器，也可以做一个高效的负载均衡反向代理，通过它接受用户的请求并分发到多个Mongrel进程可以极大提高Rails应用的并发能力。
（5）Lighttpd
基于BSD许可的开源WEB服务器软件，其根本的目的是提供一个专门针对高性能网站，安全、快速、兼容性好并且灵活的web server环境。
（6）Tomcat
web服务器漏洞攻击软件
（1）Metasploit：是一个用于开发，测试和启动攻击代码的开源平台
（2）N-Stealth：Web服务器安全扫描程序，N-Stealth主要为Windows平台提供扫描
（3）Whisker/libwhisker
（4） Nikto：是一款开放源代码的、功能强大的WEB扫描评估软件
（5）Burp suite：允许攻击者结合手工和自动技术去枚举、分析、攻击网页程序
（6）Paros proxy：基于Java的网页程序漏洞评估代理。支持实时编辑和浏览HTTP/HTTPS信息，修改例如Cookie和表字段中的内容
（7）其他
WebScarab
WebInspect
Wikto
Acunetix Web Vulnerability Scanner
Watchfire AppScan
剑煞BetaV7.6.8 Web综合信息检测入侵工具

IIS6.0漏洞
1.Iis6.0服务器名远程欺骗
该问题主要出现在asp或者asp.net程序想要获得应用程序所在服务器ip地址的时候。
Request.ServerVariables("SERVER_NAME")或者
Request.ServerVariables["SERVER _NAME"]
这样的调用会返回局部环境变量中SERVER _NAME的值。如果该请求来自Internet，这个值是web服务器的ip地址。如果请求来自web服务器，该变量的值是Localhost。
修改host：
2.Microsoft IIS服务跟踪日志绕过漏洞
（1）track隐藏请求
track是一种http方法，目前好像（其他的服务器我还不是很确定）只有iis支持，其功能和trace方法相同。请求方式如：
track / http/1.0
可是奇怪的是iis对该请求不做任何记录。这样的话很容易被利用DoS攻击。
（2）使用超长URL绕过日志记录。
3.WebDAV漏洞
IIS5.1/6.0 和 WebDAV存在一个拒绝服务漏洞，其中WebDAV（DAV代表"分布式制作和版本控制"）是 HTTP 规范的扩展，它支持授权用户在 Web 服务器上远程添加和管理内容，默认情况下，如果 Win2000上启用 IIS，则启用 WebDAV，而IIS 5.1 或 IIS 6.0 上则不安装 WebDAV
4. 文件解析路径漏洞
Win2003存在着一个文件解析路径的漏洞，当文件夹名为类似*.asp的时候，此时此文件夹下的文本类型的文件都可以在IIS中被当做ASP程序来执行。这样黑客即可上传扩展名为jpg或gif之类的看起来像是图片文件的木马文件，通过访问这个文件即可运行木马。
5.开启WebDAV服务的IIS 6.0被爆存在缓存区溢出漏洞导致远程代码执行
在IIS6.0处理PROPFIND指令的时候，由于对url的长度没有进行有效的长度控制和检查，导致执行memcpy对虚拟路径进行构造的时候，引发栈溢出，该漏洞可以导致远程代码执行。

Apache漏洞
1.Expect跨站漏洞
Apache在接收Expect这个HTTP报头会直接输出报头的错误信息，错误信息的内容并没有被转义。
在报头添加：Expect:js（Expect:<script>alert('js')</script>）
2.php文件名解析漏洞
会从右到左依次解析文件类型，直到解析到所能够解析的文件类型。构造多后缀文件，绕过检测机制，上传木马（1.php.aaa.111.aaaa.xxx）
不仅php，就连phtml、pht、php3、php4和php5都是Apache和php认可的php程序的文件后缀
3.分块(chunked)编码远程溢出漏洞
远程攻击者可能利用此漏洞在某些Apache服务器上以Web服务器进程的权限执行任意指令或进行拒绝服务攻击。 
分块编码(chunked encoding)传输方式是HTTP 1.1协议中定义的Web用户向服务器提交数据的一种方法，当服务器收到 chunked编码方式的数据时会分配一个缓冲区存放之，如果提交的数据大小未知，客户端会以一个协商好的分块大小向服务器提交数据。 
Apache服务器缺省也提供了对分块编码(chunked encoding)支持。Apache使用了一个有符号变量储存分块长度，同时分配 了一个固定大小的堆栈缓冲区来储存分块数据。出于安全考虑，在将分块数据拷贝到缓冲区之前，Apache会对分块长度进行检查，如果分块长度大于缓冲区长 度，Apache将最多只拷贝缓冲区长度的数据，否则，则根据分块长度进行数据拷贝。然而在进行上述检查时，没有将分块长度转换为无符号型进行比较，因 此，如果攻击者将分块长度设置成一个负值，就会绕过上述安全检查，Apache会将一个超长(至少>0x80000000字节)的分块数据拷贝到缓 冲区中，这会造成一个缓冲区溢出。 
The Retina Apache Chunked Scanner 是 eEye 公司开发的一款Apache 分块编码缓冲区溢出漏洞扫描软件，可同时扫描254个IP，如果它发现存在漏洞的IP，就会记录下来，系统管理员只要通过双击该IP，就可以获得该漏洞的修补方法
4.Php 3文件外泄漏洞
发现在使用了 PHP3 脚本的 Apache Web Server 中，存在一个安全漏洞。 
通过 php 发送一个指定的 URL，就能使一个用户获得一个目标机上已知文件的读权限。成功的利用该漏洞，将导致敏感信息的泄露

攻击weblogic
（1）寻找WebLogic
WebLogic Server inurl:console
（2）分析
1.测试默认密码
默认的缺省密码有以下几组：
1、用户名密码均为：weblogic
2、用户名密码均为：system
3、用户名密码均为：portaladmin
4、用户名密码均为：guest
2.验证url输入
Bea weblogic在Windows平台下的版本存在一个安全漏洞，攻击者可以在一个URL后面
增加一些特殊的编码字符（例如%00,%2e,%2f或%5c），可能导致绕过缺省浏览文档(例如，index.html)的限制,从而得到web目录的内容列表


用户名获取
（1）从网站的用户标识获取用户名
对于博客，论坛，交友网这样的网站，对于不同的用户的标识有用户名，ID号，昵称等级种形式，很多时候会很明显的暴露用户登录用的用户名。
https://www.cnblogs.com/fish-li/      fish-li就是用户名
（2）内容信息
很多网站是以邮箱登陆的，但个人信息也有Email选项，如果该用户填写了，很有可能就是暴露了他的登录用户名。
（3）暴力登录探测
1.登录界面
不断尝试登陆解密，判断是否存在该用户
2.注册信息
当输入注册的用户名存在，就会返回该用户名存在
3.找回密码信息
进行尝试输入
4.账户锁定
账户锁定仅仅针对已经存在的用户，而对不存在的用户是不锁定的，被暴力程序造成拒绝服务攻击
（4）阻止暴力探测
1.账户锁定：尝试多次还是失败，应该将账户锁定
2.返回信息
如果不管结果如何都返回成功的信息，破解软件就会停止攻击。但是对人来说很快就会被识破。
3.页面跳转
产生登录错的的时候就跳到另一个页面要求重新登录
4.适当的延时
检查密码的时候适当的插入一些暂停，可以减缓攻击，但是可能对用户造成一定的影响。
5.封锁多次登录的IP地址
6.验证码
验证码确实是阻止暴力攻击的好方法，但设计不好的验证码是可以绕过的


密码探测
（1）自动化密码探测
自动化密码探测就是利用探测软件不断的向目标发出请求，根据响应来判断探测成功与否。
自动化探测一般有两种方式：
 一是对同一用户名尝试不同的密码
二是对不同的用户尝试相同的密码。能有效的防止账户锁定。
对于自动化密码探测最大的障碍是验证码和人机区分测试
（2）社会工程学
1.推测法：根据相关信息，进行密码组合，被动设计信息，不与目标直接接触，收集与他相关的信息
2.欺骗：与目标直接接触
（3）Post用户名，密码


嗅探
1.Sniffer
Sniffer（嗅探器）程序是一种利用以太网的特性把网络适配卡（NIC，一般为以太网卡）置为杂乱（promiscuous）模式状态的工具，
一旦网卡设置为这种模式，它就能接收传输在网络上的每一个信息包。Sniffer分为软件和硬件两种，一般指的是软件，但功能有限，硬件价格比较贵。
防止嗅探攻击的最好方式就是加密数据。
嗅探工具：

会话劫持
会话劫持攻击分为两种类型：
1）中间人攻击(Man In The Middle，简称MITM)，
2）注射式攻击（Injection）
会话劫持攻击分为两种形式：
1）被动劫持：被动劫持实际上就是在后台监视双方会话的数据流丛中获得敏感数据
2）主动劫持；而主动劫持则是将会话当中的某一台主机"踢"下线，然后由攻击者取代并接管会话。
（1）中间人攻击
要想正确的实施中间人攻击，攻击者首先需要使用ARP欺骗或DNS欺骗，将会话双方的通讯流暗中改变，而这种改变对于会话双方来说是完全透明的。不管是ARP欺骗，还是DNS欺骗，中间人攻击都改变正常的通讯流，它就相当于会话双方之间的一个透明代理，可以得到一切想知道的信息，甚至是利用一些有缺陷的加密协议来实现。
（2）注射式攻击
它不会改变会话双方的通讯流，而是在双方正常的通讯流插入恶意数据。在注射式攻击中，需要实现两种技术：1）IP欺骗，2）预测TCP序列号。如果是UDP协议，只需伪造IP地址，然后发送过去就可以了，因为UDP没有所谓的TCP三次握手，但基于UDP的应用协议有流控机制，所以也要做一些额外的工作。
对于IP欺骗，有两种情况需要用到：1）隐藏自己的IP地址；2）利用两台机器之间的信任关系实施入侵。
对于基于TCP协议的注射式会话劫持，攻击者应先采用嗅探技术对目标进行监听，然后从监听到的信息中构造出正确的序列号，会话劫持的关键是预测正确的序列号，攻击者可以采取嗅探技术获得这些信息。
TCP协议的序列号：
在每一个数据包中，都有两段序列号，它们分别为：
SEQ：当前数据包中的第一个字节的序号
ACK：期望收到对方数据包中第一个字节的序号
它们之间必须符合下面的逻辑关系，否则该数据包会被丢弃，并且返回一个ACK包（包含期望的序列号）。
C_ACK <= C_SEQ <= C_ACK + C_WIND
S_ACK <= S_SEQ <= S_ACK + S_WIND
如果不符合上边的逻辑关系，就会引申出一个"致命弱点"。 
这个致命的弱点就是ACK风暴(Storm)
（3）http会话劫持
Web应用程序是通过2种方式来判断和跟踪不同用户的：Cookie或者Session（也叫做会话型Cookie）
其中Cookie是存储在本地计算机上的，过期时间很长，所以针对Cookie的攻击手段一般是盗取用户Cookie然后伪造Cookie冒充该用户；
而Session由于其存在于服务端，随着会话的注销而失效（很快过期），往往难于利用。所以一般来说Session认证较之Cookie认证安全。
工具：ssclone

CSRF（跨站请求伪造）
CSRF是伪造客户端请求的一种攻击，CSRF的英文全称是Cross Site Request Forgery，字面上的意思是跨站点请求伪造。是强迫受害者的浏览器向一个易受攻击的Web应用程序发送请求,最后达到攻击者所需要的操作行为。
跨站请求伪造的分类：
1.站内伪造：站内伪造不涉及跨域
2.站外伪造。这是个跨域提交请求的方式